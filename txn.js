// Generated by CoffeeScript 1.6.3
var Transaction;

Transaction = (function() {
  Transaction.startInClient = function(pgClient, releaseOnCompletion, callback) {
    var _ref;
    if (typeof releaseOnCompletion === 'function') {
      _ref = [releaseOnCompletion, false], callback = _ref[0], releaseOnCompletion = _ref[1];
    }
    return (new Transaction(pgClient, releaseOnCompletion)).startTransaction(callback);
  };

  Transaction.start = function(callback) {
    return pgPool.acquire(function(err, pgClient) {
      if (err != null) {
        return callback(err);
      }
      return Transaction.startInClient(pgClient, true, callback);
    });
  };

  function Transaction(pgClient, releaseOnComplete) {
    this.pgClient = pgClient;
    this.releaseOnComplete = releaseOnComplete;
  }

  Transaction.prototype.startTransaction = function(cb) {
    var _this = this;
    return this.pgClient.query("BEGIN", function(err) {
      return cb(err, _this);
    });
  };

  Transaction.prototype.rollback = function(cb) {
    var _this = this;
    return this.pgClient.query("ROLLBACK", function(err) {
      if (_this.releaseOnComplete) {
        pgPool.release(_this.pgClient);
      }
      if (cb != null) {
        return cb(err, _this);
      }
    });
  };

  Transaction.prototype.commit = function(cb) {
    var _this = this;
    return this.pgClient.query("COMMIT", function(err) {
      if (_this.releaseOnComplete) {
        pgPool.release(_this.pgClient);
      }
      if (cb != null) {
        return cb(err, _this);
      }
    });
  };

  Transaction.prototype.wrapCallback = function(cb) {
    var _this = this;
    return function(err) {
      var callerArguments;
      callerArguments = arguments;
      if (err != null) {
        _this.rollback();
        return cb.apply(null, callerArguments);
      } else {
        return _this.commit(function(commitErr) {
          if (commitErr != null) {
            return cb(commitErr);
          }
          return cb.apply(null, callerArguments);
        });
      }
    };
  };

  return Transaction;

})();
